---

- name: Assert Python Version was specified
  assert:
    that: sansible_pyenv_python_version is not none
    msg: Python Version must be specified

- name: Install Prerequisites for pyenv
  become: yes
  apt:
    name:
      - build-essential
      - curl
      - libbz2-dev
      - libncurses5-dev
      - libreadline-dev
      - libsqlite3-dev
      - libssl-dev
      - llvm
      - make
      - python-setuptools
      - tk-dev
      - wget
      - xz-utils
      - zlib1g-dev
    state: present

- name: Ensure pyenv install dir
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  file:
    path: "{{ sansible_pyenv_installation_dir }}"
    state: directory

- name: Download Pyenv
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  get_url:
    dest: "/var/tmp/pyenv-{{ sansible_pyenv_version }}.tar.gz"
    sha256sum: "{{ sansible_pyenv_checksum }}"
    url: "https://github.com/pyenv/pyenv/archive/{{ sansible_pyenv_version }}.tar.gz"

- name: Extract Pyenv
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  unarchive:
    dest: "{{ sansible_pyenv_installation_dir }}"
    extra_opts:
      - "--strip-components=1"
    remote_src: yes
    src: "/var/tmp/pyenv-{{ sansible_pyenv_version }}.tar.gz"

- name: Enable global access to pyenv shim directory
  become: yes
  file:
    path: "{{ sansible_pyenv_installation_dir }}/shims"
    recurse: yes
    mode: 0777
  when: sansible_pyenv_global_install == true

- name: Ensure install dir is expanded for pyenv single user
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  shell: "echo {{ sansible_pyenv_installation_dir }}"
  changed_when: false
  register: sansible_pyenv_installation_dir_expanded
  when: sansible_pyenv_global_install != true
  tags:
    - skip_ansible_lint

- name: Enable pyenv single user
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  blockinfile:
    backup: yes
    block: |
      export PYENV_ROOT="{{ sansible_pyenv_installation_dir_expanded.stdout }}"
      export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
    create: yes
    dest: ~/.profile
    marker: "# {mark} sansible.pyenv managed block"
    mode: 0640
  when: sansible_pyenv_global_install != true

- name: Enable pyenv globally
  become: yes
  copy:
    content: |
      export PYENV_ROOT="{{ sansible_pyenv_installation_dir }}"
      export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
    dest: "{{ sansible_pyenv_global_profile_file }}"
    mode: 0744
  when: sansible_pyenv_global_install == true

- name: Install Python
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  command: "bash -lc 'pyenv install {{ sansible_pyenv_python_version }}'"
  args:
    creates: "{{ sansible_pyenv_installation_dir }}/versions/{{ sansible_pyenv_python_version }}/bin/python"
  when: sansible_pyenv_python_version != "system"

- name: Ensure requested Python Version is installed
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  command: bash -lc "pyenv versions --bare --skip-aliases"
  changed_when: no
  register: pyenv_versions_list
  failed_when:
    - sansible_pyenv_python_version not in  pyenv_versions_list.stdout
    - sansible_pyenv_python_version != "system"

- name: Install Python Modules
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  pip:
    executable: "{{ sansible_pyenv_installation_dir }}/versions/{{ sansible_pyenv_python_version }}/bin/pip"
    name: "{{ sansible_pyenv_python_modules }}"
  when: sansible_pyenv_python_version != "system"

- name: Fetch Current Global Python Version
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  command: bash -lc "pyenv global"
  changed_when: no
  register: global_version

- name: Activate Python Version
  become: yes
  become_user: "{{ sansible_pyenv_user }}"
  command: "bash -lc 'pyenv global {{ sansible_pyenv_python_version }}'"
  when:
    - sansible_pyenv_activate
    - sansible_pyenv_python_version != global_version.stdout
